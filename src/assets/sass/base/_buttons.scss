.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  border: none;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-large, $line-height-base, $btn-border-radius-base);
  @include user-select(none);
  transition: color 0.3s linear;
  text-decoration: none;
  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      outline: none;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: white;
    text-decoration: none;
  }

  &:active,
  &.active {
    background-image: none;
    outline: 0;
    @include box-shadow(inset 0 3px 5px rgba(0, 0, 0, .125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    @include opacity(.65);
    @include box-shadow(none);
  }
  // [converter] extracted a& to a.btn
  .loading {
    padding: 0;
    background: none;
    display: inline-block;
    vertical-align: bottom;
    margin-right: 5px;
    .c-loader {
      width: 24px;
      height: 24px;
      border-width: 3px;
    }
  }
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}


// Alternate buttons
// --------------------------------------------------

.btn-default {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border, $btn-default-hover);
  box-shadow: 0px 4px 20px rgba(151, 201, 61, 0.4);
  &:hover {
    box-shadow: 0px 4px 20px rgba(151, 201, 61, 0.8);
  }
}
.btn-outlined {
  border: 1px solid transparent;
  @include button-variant($btn-outline-color, $btn-outline-bg, $btn-outline-border, $btn-outline-hover);
  &:hover {
    color: white;
    transition: all 0.2s linear;
  }
  
}
.btn-primary {
  @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}
.btn-secondary {
  @include button-variant($btn-secondary-color, $btn-secondary-bg, $btn-secondary-border);
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  font-weight: 400;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}


// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-base, $line-height-small, $btn-border-radius-small);
}
.btn-xs {
  @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}


// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
.btn-close {
  padding: 15px 15px;
  margin: -15px -15px -15px auto;
  font-size: 0;
  width: 30px;
  position: relative;
  cursor: pointer;
  &:after,&:before {
    content: '';
    position: absolute;
    right: 50%;
    top: 50%;
    width: 16px;
    height: 2px;
    margin-top: -1px;
    margin-right: -8px;
    background-color: $text-main;
    transform: rotate(45deg);
    transition: all .3s ease-in-out;
    
  }
  &:before {
    transform: rotate(-45deg);
  }
  @include onlyPC() {
    &:hover {
      &:after,&:before {
        background-color: $primary;
      }
    }
  }
}